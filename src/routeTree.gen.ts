/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as WarenbestandImport } from './routes/warenbestand'
import { Route as VerkaufImport } from './routes/verkauf'
import { Route as TelefonieImport } from './routes/telefonie'
import { Route as StatistikImport } from './routes/statistik'
import { Route as RechnImport } from './routes/rechn'
import { Route as PostOfficeImport } from './routes/post-office'
import { Route as LagerverwaltungImport } from './routes/lagerverwaltung'
import { Route as HelpImport } from './routes/help'
import { Route as EinkaufImport } from './routes/einkauf'
import { Route as DashboardImport } from './routes/dashboard'
import { Route as BankingImport } from './routes/banking'
import { Route as AuswahllistenImport } from './routes/auswahllisten'
import { Route as AdministrationImport } from './routes/administration'
import { Route as AccountingImport } from './routes/accounting'

// Create/Update Routes

const WarenbestandRoute = WarenbestandImport.update({
  path: '/warenbestand',
  getParentRoute: () => rootRoute,
} as any)

const VerkaufRoute = VerkaufImport.update({
  path: '/verkauf',
  getParentRoute: () => rootRoute,
} as any)

const TelefonieRoute = TelefonieImport.update({
  path: '/telefonie',
  getParentRoute: () => rootRoute,
} as any)

const StatistikRoute = StatistikImport.update({
  path: '/statistik',
  getParentRoute: () => rootRoute,
} as any)

const RechnRoute = RechnImport.update({
  path: '/rechn',
  getParentRoute: () => rootRoute,
} as any)

const PostOfficeRoute = PostOfficeImport.update({
  path: '/post-office',
  getParentRoute: () => rootRoute,
} as any)

const LagerverwaltungRoute = LagerverwaltungImport.update({
  path: '/lagerverwaltung',
  getParentRoute: () => rootRoute,
} as any)

const HelpRoute = HelpImport.update({
  path: '/help',
  getParentRoute: () => rootRoute,
} as any)

const EinkaufRoute = EinkaufImport.update({
  path: '/einkauf',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRoute = DashboardImport.update({
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const BankingRoute = BankingImport.update({
  path: '/banking',
  getParentRoute: () => rootRoute,
} as any)

const AuswahllistenRoute = AuswahllistenImport.update({
  path: '/auswahllisten',
  getParentRoute: () => rootRoute,
} as any)

const AdministrationRoute = AdministrationImport.update({
  path: '/administration',
  getParentRoute: () => rootRoute,
} as any)

const AccountingRoute = AccountingImport.update({
  path: '/accounting',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/accounting': {
      id: '/accounting'
      path: '/accounting'
      fullPath: '/accounting'
      preLoaderRoute: typeof AccountingImport
      parentRoute: typeof rootRoute
    }
    '/administration': {
      id: '/administration'
      path: '/administration'
      fullPath: '/administration'
      preLoaderRoute: typeof AdministrationImport
      parentRoute: typeof rootRoute
    }
    '/auswahllisten': {
      id: '/auswahllisten'
      path: '/auswahllisten'
      fullPath: '/auswahllisten'
      preLoaderRoute: typeof AuswahllistenImport
      parentRoute: typeof rootRoute
    }
    '/banking': {
      id: '/banking'
      path: '/banking'
      fullPath: '/banking'
      preLoaderRoute: typeof BankingImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/einkauf': {
      id: '/einkauf'
      path: '/einkauf'
      fullPath: '/einkauf'
      preLoaderRoute: typeof EinkaufImport
      parentRoute: typeof rootRoute
    }
    '/help': {
      id: '/help'
      path: '/help'
      fullPath: '/help'
      preLoaderRoute: typeof HelpImport
      parentRoute: typeof rootRoute
    }
    '/lagerverwaltung': {
      id: '/lagerverwaltung'
      path: '/lagerverwaltung'
      fullPath: '/lagerverwaltung'
      preLoaderRoute: typeof LagerverwaltungImport
      parentRoute: typeof rootRoute
    }
    '/post-office': {
      id: '/post-office'
      path: '/post-office'
      fullPath: '/post-office'
      preLoaderRoute: typeof PostOfficeImport
      parentRoute: typeof rootRoute
    }
    '/rechn': {
      id: '/rechn'
      path: '/rechn'
      fullPath: '/rechn'
      preLoaderRoute: typeof RechnImport
      parentRoute: typeof rootRoute
    }
    '/statistik': {
      id: '/statistik'
      path: '/statistik'
      fullPath: '/statistik'
      preLoaderRoute: typeof StatistikImport
      parentRoute: typeof rootRoute
    }
    '/telefonie': {
      id: '/telefonie'
      path: '/telefonie'
      fullPath: '/telefonie'
      preLoaderRoute: typeof TelefonieImport
      parentRoute: typeof rootRoute
    }
    '/verkauf': {
      id: '/verkauf'
      path: '/verkauf'
      fullPath: '/verkauf'
      preLoaderRoute: typeof VerkaufImport
      parentRoute: typeof rootRoute
    }
    '/warenbestand': {
      id: '/warenbestand'
      path: '/warenbestand'
      fullPath: '/warenbestand'
      preLoaderRoute: typeof WarenbestandImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  AccountingRoute,
  AdministrationRoute,
  AuswahllistenRoute,
  BankingRoute,
  DashboardRoute,
  EinkaufRoute,
  HelpRoute,
  LagerverwaltungRoute,
  PostOfficeRoute,
  RechnRoute,
  StatistikRoute,
  TelefonieRoute,
  VerkaufRoute,
  WarenbestandRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/accounting",
        "/administration",
        "/auswahllisten",
        "/banking",
        "/dashboard",
        "/einkauf",
        "/help",
        "/lagerverwaltung",
        "/post-office",
        "/rechn",
        "/statistik",
        "/telefonie",
        "/verkauf",
        "/warenbestand"
      ]
    },
    "/accounting": {
      "filePath": "accounting.tsx"
    },
    "/administration": {
      "filePath": "administration.tsx"
    },
    "/auswahllisten": {
      "filePath": "auswahllisten.tsx"
    },
    "/banking": {
      "filePath": "banking.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard.tsx"
    },
    "/einkauf": {
      "filePath": "einkauf.tsx"
    },
    "/help": {
      "filePath": "help.tsx"
    },
    "/lagerverwaltung": {
      "filePath": "lagerverwaltung.tsx"
    },
    "/post-office": {
      "filePath": "post-office.tsx"
    },
    "/rechn": {
      "filePath": "rechn.tsx"
    },
    "/statistik": {
      "filePath": "statistik.tsx"
    },
    "/telefonie": {
      "filePath": "telefonie.tsx"
    },
    "/verkauf": {
      "filePath": "verkauf.tsx"
    },
    "/warenbestand": {
      "filePath": "warenbestand.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
